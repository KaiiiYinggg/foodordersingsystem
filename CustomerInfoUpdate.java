package foodorderingsystem;

import domain.Customer;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.*;
import java.util.ArrayList;
import java.util.*;
import javax.swing.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author HP
 */
public class CustomerInfoUpdate extends javax.swing.JFrame {

    /**
     * Creates new form CustomerRegistration
     */
    Login login = new Login();

    public CustomerInfoUpdate() {
        initComponents();
        getContentPane().setBackground(new Color(144, 204, 132)); // Set background color
        for (java.awt.Component component : getContentPane().getComponents()) {
            if (component instanceof javax.swing.JPanel) {
                component.setBackground(new Color(252, 154, 63));
            }
        }

        System.out.println(login.getUsername());

        ImageIcon img = new ImageIcon(getClass().getResource("/files/back.png"));
        Image scaledImage = img.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH);//with 200px,height 200px
        ImageIcon scaledIcon = new ImageIcon(scaledImage);
        back.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                CustomerMenu c = new CustomerMenu();
                c.setVisible(true);
                dispose();
            }
        });

        back.setText("");
        back.setIcon(scaledIcon);
        setLocationRelativeTo(null);
        createCustomerPanel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        custId = new javax.swing.JTextField();
        back = new javax.swing.JLabel();
        infoPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        ic = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        phoneNum = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        postCode = new javax.swing.JTextField();
        dob = new javax.swing.JTextField();
        state = new javax.swing.JComboBox<>();
        city = new javax.swing.JComboBox<>();
        gender = new javax.swing.JComboBox<>();
        password = new javax.swing.JPasswordField();
        btnPanel = new javax.swing.JPanel();
        updateBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Sitka Text", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Customer Registration");

        custId.setEditable(false);
        custId.setFont(new java.awt.Font("Sitka Text", 0, 18)); // NOI18N
        custId.setText("Customer ID");

        back.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(back)
                        .addGap(134, 134, 134)
                        .addComponent(jLabel1))
                    .addComponent(custId, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(back))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(custId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        infoPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                infoPanelComponentShown(evt);
            }
        });

        jLabel3.setText("Full Name :");

        jLabel4.setText("Identity Card Number (IC) :");

        jLabel5.setText("Email Address :");

        jLabel6.setText("Phone Number :");

        jLabel7.setText("Password :");

        jLabel8.setText("Address :");

        jLabel9.setText("City :");

        jLabel10.setText("Post Code :");

        jLabel11.setText("State/Province :");

        jLabel12.setText("Date od Bith(YYYY-MM-DD):");

        jLabel14.setText("Gender :");

        state.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select State", "Johor ", "Kedah", "Kelantan", "Melaka", "Negeri Sembilan", "Pahang", "Perak", "Perlis", "Pulau Pinang ", "Sabah", "Sarawak", "Selangor", "Terengganu", "Kuala Lumpur", "Putrajaya ", "Labuan" }));

        city.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select ", "Male", "Female" }));

        javax.swing.GroupLayout infoPanelLayout = new javax.swing.GroupLayout(infoPanel);
        infoPanel.setLayout(infoPanelLayout);
        infoPanelLayout.setHorizontalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoPanelLayout.createSequentialGroup()
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(infoPanelLayout.createSequentialGroup()
                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(infoPanelLayout.createSequentialGroup()
                                        .addGap(405, 405, 405)
                                        .addComponent(jLabel11))
                                    .addGroup(infoPanelLayout.createSequentialGroup()
                                        .addGap(103, 103, 103)
                                        .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, infoPanelLayout.createSequentialGroup()
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(48, 48, 48)
                        .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, infoPanelLayout.createSequentialGroup()
                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10))
                            .addGroup(infoPanelLayout.createSequentialGroup()
                                .addComponent(ic, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9))
                            .addGroup(infoPanelLayout.createSequentialGroup()
                                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(46, 46, 46)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(postCode, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        infoPanelLayout.setVerticalGroup(
            infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel11)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(state, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(ic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel10)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel12)
                    .addComponent(phoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel14)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(infoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnPanel.setBackground(new java.awt.Color(255, 204, 204));

        updateBtn.setBackground(new java.awt.Color(255, 106, 0));
        updateBtn.setFont(new java.awt.Font("Rockwell", 0, 16)); // NOI18N
        updateBtn.setText("UPDATE");

        javax.swing.GroupLayout btnPanelLayout = new javax.swing.GroupLayout(btnPanel);
        btnPanel.setLayout(btnPanelLayout);
        btnPanelLayout.setHorizontalGroup(
            btnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(259, 259, 259))
        );
        btnPanelLayout.setVerticalGroup(
            btnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnPanelLayout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(updateBtn)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(infoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void infoPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_infoPanelComponentShown

    }//GEN-LAST:event_infoPanelComponentShown

    Customer customer = new Customer();

    private void createCustomerPanel() {

        String[] defaultCities = {"Select City"};

        state.addActionListener(e -> {
            String selectedState = state.getSelectedItem().toString();
            switch (selectedState) {
                case "Johor":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Johor Bahru", "Mersing", "Batu Pahat", "Kluang", "Segamat", "Pontian"}));
                    break;
                case "Kedah":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Alor Setar", "Sungai Petani", "Kulim", "Langkawi", "Pendang"}));
                    break;
                case "Kelantan":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Kota Bharu", "Tanah Merah", "Machang", "Kuala Krai", "Gua Musang"}));
                    break;
                case "Melaka":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Melaka City", "Ayer Keroh", "Alor Gajah", "Jasin"}));
                    break;
                case "Negeri Sembilan":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Seremban", "Port Dickson", "Nilai", "Tampin"}));
                    break;
                case "Pahang":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Kuantan", "Temerloh", "Pekan", "Bentong", "Raub"}));
                    break;
                case "Perak":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Ipoh", "Taiping", "Teluk Intan", "Batu Gajah", "Parit Buntar"}));
                    break;
                case "Perlis":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Kangar", "Arau", "Padang Besar"}));
                    break;
                case "Pulau Pinang":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "George Town", "Butterworth", "Bayan Lepas", "Seberang Jaya"}));
                    break;
                case "Sabah":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Kota Kinabalu", "Sandakan", "Tawau", "Keningau", "Lahad Datu"}));
                    break;
                case "Sarawak":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Kuching", "Miri", "Sibu", "Bintulu", "Limbang"}));
                    break;
                case "Selangor":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Shah Alam", "Petaling Jaya", "Subang Jaya", "Klang", "Kajang"}));
                    break;
                case "Terengganu":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Kuala Terengganu", "Dungun", "Kemaman", "Marang"}));
                    break;
                case "Kuala Lumpur":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Kuala Lumpur"}));
                    break;
                case "Putrajaya":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Putrajaya"}));
                    break;
                case "Labuan":
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City", "Labuan"}));
                    break;
                default:
                    city.setModel(new DefaultComboBoxModel<>(new String[]{"Select City"}));
                    break;
            }
        });

        boolean recordFound = false;

        try (BufferedReader br = new BufferedReader(new FileReader("custRegistration.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] columns = line.split("\\|");
                if (columns.length >= 12 && columns[11].trim().equals(login.getUsername())) {

                    customer.setName(columns[0]);
                    customer.setIc(columns[1]);
                    customer.setEmail(columns[2]);
                    customer.setPhoneNum(columns[3]);
                    customer.setAddres(columns[4]);
                    customer.setState(columns[5]);
                    customer.setCity(columns[6]);
                    customer.setPostalCode(columns[7]);
                    customer.setDob(columns[8]);
                    customer.setGender(columns[9]);
                    customer.setPassword(columns[10]);
                    customer.setId(columns[11]);

                    name.setText(customer.getName());
                    ic.setText(customer.getIc());
                    email.setText(customer.getEmail());
                    phoneNum.setText(customer.getPhoneNum());
                    address.setText(customer.getAddress());
                    state.setSelectedItem(customer.getState());
                    city.setSelectedItem(customer.getCity());
                    postCode.setText(customer.getPostalCode());
                    dob.setText(customer.getDob());
                    gender.setSelectedItem(customer.getGender());
                    address.setText(customer.getPassword());
                    custId.setText(customer.getId());

                    recordFound = true;
                    break;
                }
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "An error occurred while reading the file: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        if (!recordFound) {
            JOptionPane.showMessageDialog(null, "No Record Found", "Search Result", JOptionPane.INFORMATION_MESSAGE);
        }

        updateBtn.addActionListener(e -> {
            try {
                String customerID = login.getUsername();

                if (customerID.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please enter an IC to modify.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                customer.setName(name.getText());
                customer.setIc(ic.getText());
                customer.setEmail(email.getText());
                customer.setPhoneNum(phoneNum.getText());
                customer.setAddres(address.getText());
                customer.setState(state.getSelectedItem().toString());
                customer.setCity(city.getSelectedItem().toString());
                customer.setPostalCode(postCode.getText());
                customer.setDob(dob.getText());
                customer.setGender(gender.getSelectedItem().toString());

                customer.setPassword(new String(password.getPassword()));

                // Validate input
                if (customer.getName().isEmpty() || customer.getIc().isEmpty() || customer.getEmail().isEmpty() || customer.getPhoneNum().isEmpty()
                        || customer.getAddress().isEmpty() || customer.getState().equals("Select") || customer.getCity().equals("Select")
                        || customer.getPostalCode().isEmpty() || customer.getGender().equals("Select") || customer.getDob().isEmpty() || customer.getId().isEmpty()
                        || customer.getPassword().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please fill all required fields!", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                List<String> custLines = Files.readAllLines(Paths.get("custRegistration.txt"));
                List<String> updatedLines = new ArrayList<>();

                String validationMessage = customer.inputChecking(name.getText(), ic.getText(), email.getText(), phoneNum.getText(), address.getText(), dob.getText(), Arrays.toString(password.getPassword()), gender.getSelectedItem().toString(), state.getSelectedItem().toString(), city.getSelectedItem().toString(), postCode.getText());

                if (validationMessage != null) {
                    JOptionPane.showMessageDialog(this, validationMessage, "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                boolean found = false;

                // Iterate through all lines to find the matching IC
                for (String line : custLines) {
                    String[] custParts = line.split("\\|");

                    if (custParts.length > 1 && custParts[11].trim().equals(customerID)) {
                        found = true;

                        String updatedRecord = customer.getName() + "|" + customer.getIc() + "|" + customer.getEmail() + "|" + customer.getPhoneNum() + "|"
                                + customer.getAddress() + "|" + customer.getState() + "|" + customer.getCity() + "|" + customer.getPostalCode() + "|"
                                + customer.getDob() + "|" + customer.getGender() + "|" + customer.getPassword() + "|" + custParts[11].trim();
                        updatedLines.add(updatedRecord);
                    } else {
                        updatedLines.add(line);
                    }
                }

                if (found) {
                    if (custId.getText().equals(customerID)) {
                        Files.write(Paths.get("custRegistration.txt"), updatedLines);
                        JOptionPane.showMessageDialog(null, "Record updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

                        name.setText("");
                        ic.setText("");
                        email.setText("");
                        phoneNum.setText("");
                        address.setText("");
                        state.setSelectedItem("Select");
                        city.setSelectedItem("Select");
                        postCode.setText("");
                        dob.setText("");
                        gender.setSelectedItem("Select");
                        custId.setText("");
                        address.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "IC cannot be modify.", "Upadate Record Fail", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "No record found with the given IC.", "Not Found", JOptionPane.INFORMATION_MESSAGE);
                }

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "An error occurred while processing the file: " + ex.getMessage(),
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JLabel back;
    private javax.swing.JPanel btnPanel;
    private javax.swing.JComboBox<String> city;
    private javax.swing.JTextField custId;
    private javax.swing.JTextField dob;
    private javax.swing.JTextField email;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JTextField ic;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField name;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField phoneNum;
    private javax.swing.JTextField postCode;
    private javax.swing.JComboBox<String> state;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
